;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.

;; RUN: wasm-as %s -all -g -o %t.wasm
;; RUN: wasm-dis %t.wasm -all -o %t.wast
;; RUN: wasm-opt %s -all -o %t.text.wast -g -S
;; RUN: cat %t.wast | filecheck %s --check-prefix=CHECK-BINARY
;; RUN: cat %t.text.wast | filecheck %s --check-prefix=CHECK-TEXT

(module
  ;; Immutable arrays are not yet in the spec or VMs, so for now do not emit
  ;; them in the binary format (but we use them in IR and in text).
  ;; https://github.com/WebAssembly/gc/issues/250

  ;; CHECK-BINARY:      (type $vector (array (mut i32)))
  ;; CHECK-TEXT:      (type $vector (array i32))
  (type $vector (array i32))

  ;; CHECK-BINARY:      (func $test
  ;; CHECK-BINARY-NEXT:  (drop
  ;; CHECK-BINARY-NEXT:   (array.new $vector
  ;; CHECK-BINARY-NEXT:    (i32.const 42)
  ;; CHECK-BINARY-NEXT:    (i32.const 3)
  ;; CHECK-BINARY-NEXT:   )
  ;; CHECK-BINARY-NEXT:  )
  ;; CHECK-BINARY-NEXT:  (drop
  ;; CHECK-BINARY-NEXT:   (array.get $vector
  ;; CHECK-BINARY-NEXT:    (ref.null $vector)
  ;; CHECK-BINARY-NEXT:    (i32.const 1)
  ;; CHECK-BINARY-NEXT:   )
  ;; CHECK-BINARY-NEXT:  )
  ;; CHECK-BINARY-NEXT: )
  ;; CHECK-TEXT:      (func $test
  ;; CHECK-TEXT-NEXT:  (drop
  ;; CHECK-TEXT-NEXT:   (array.new $vector
  ;; CHECK-TEXT-NEXT:    (i32.const 42)
  ;; CHECK-TEXT-NEXT:    (i32.const 3)
  ;; CHECK-TEXT-NEXT:   )
  ;; CHECK-TEXT-NEXT:  )
  ;; CHECK-TEXT-NEXT:  (drop
  ;; CHECK-TEXT-NEXT:   (array.get $vector
  ;; CHECK-TEXT-NEXT:    (ref.null $vector)
  ;; CHECK-TEXT-NEXT:    (i32.const 1)
  ;; CHECK-TEXT-NEXT:   )
  ;; CHECK-TEXT-NEXT:  )
  ;; CHECK-TEXT-NEXT: )
  (func $test
    (drop
      (array.new $vector
        (i32.const 42)
        (i32.const 3)
      )
    )
    (drop
      (array.get $vector
        (ref.null $vector)
        (i32.const 1)
      )
    )
  )
)
